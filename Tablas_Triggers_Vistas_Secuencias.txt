CREATE TABLE usuario(
	rut varchar2(20) not null primary key,
	contrasenna varchar2(20) not null,
	nombre varchar2(20) not null,
	tipo varchar2(20) not null,
	comision integer default 0);

--ejemplo:
	--insert into usuario(rut,contrasenna,nombre,tipo) values('123','123','123','administrador')

ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
CREATE TABLE cliente(
	rut varchar2(20) not null primary key,
	nombre varchar2(20) not null);

--ejemplo:
	--insert into cliente(rut,nombre) values('123','123')

ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
CREATE TABLE producto(
	id_producto integer not null primary key,
	stock integer default not null,
	descripcion varchar2(20) not null,
	categoria varchar2(20) not null,
	precio integer not null);

--ejemplo:
	--insert into producto(descripcion,categoria,precio) values('producto1','vegetal',999)

ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
CREATE TABLE compra(
id_compra INTEGER PRIMARY KEY,
monto_total integer not null,
fecha_hora date default sysdate);

--ejemplo:
	--insert into compra(id_compra, monto_total) values(auto_inc_compra.nextval, 234)

ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
CREATE TABLE venta(
	id_venta integer not null primary key,
	id_cliente varchar2(20) not null,
	id_usuario varchar2(20) not null,
	monto_total integer DEFAULT 0,
	fecha_hora date DEFAULT sysdate,
	foreign key (id_cliente) references cliente(rut),
	foreign key (id_usuario) references usuario(rut));

--ejemplo:
	--insert into venta(id_venta,id_cliente,id_usuario) values(auto_inc_venta.nextval,'123','123')

ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
CREATE TABLE detalle_venta(
	id_detalle integer not null primary key,
	id_venta integer not null,
        id_producto integer not null,
	cantidad integer not null,
	foreign key (id_venta) references venta(id_venta),
	foreign key (id_producto) references producto(id_producto));

--ejemplo:
	--insert into detalle_venta(id_venta,id_producto,cantidad) values(1,1,3)

ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
CREATE TABLE detalle_compra(
	id_detalle integer not null primary key,
	id_compra integer not null,
	id_producto integer not null,
	cantidad integer not null,
	precio integer not null,
        foreign key (id_compra) references compra(id_compra),
        foreign key (id_producto) references producto(id_producto));

--ejemplo:
	--insert into detalle_compra(id_compra,id_producto,cantidad,precio) values(1,1,12,1999)

------------------------------------------------------------------------------------------
CREATE SEQUENCE auto_inc_producto
    START WITH 1
    INCREMENT BY 1
    MINVALUE 1
    NOCYCLE;

CREATE SEQUENCE auto_inc_compra
    START WITH 1
    INCREMENT BY 1
    MINVALUE 1
    NOCYCLE;

CREATE SEQUENCE auto_inc_detalle_compra
    START WITH 1
    INCREMENT BY 1
    MINVALUE 1
    NOCYCLE;

CREATE SEQUENCE auto_inc_venta
    START WITH 1
    INCREMENT BY 1
    MINVALUE 1
    NOCYCLE;

CREATE SEQUENCE auto_inc_detalle_venta
    START WITH 1
    INCREMENT BY 1
    MINVALUE 1
    NOCYCLE;

------------------------------------------------------------------------------------------

CREATE VIEW view_VentasCliente AS
SELECT cliente.rut, cliente.nombre, producto.descripcion FROM venta, cliente, detalle_venta, producto WHERE (cliente.rut=venta.id_cliente AND (detalle_venta.id_venta=venta.id_venta AND producto.id_producto=detalle_venta.id_producto)) order by cliente.rut;

--para verlo:
	--select * from view_ventascliente

ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
CREATE VIEW view_VentasVendedor AS
SELECT usuario.rut, usuario.nombre, producto.descripcion FROM venta, usuario, detalle_venta, producto WHERE usuario.tipo='vendedor' AND (usuario.rut=venta.id_usuario AND (detalle_venta.id_venta=venta.id_venta AND producto.id_producto=detalle_venta.id_producto)) order by usuario.rut;

--para verlo:
	--select * from view_ventasVendedor

------------------------------------------------------------------------------------------

DELIMITER @@
CREATE OR REPLACE TRIGGER SYSTEM.trigger_compras
BEFORE INSERT ON detalle_compra
FOR EACH ROW
BEGIN
:new.id_detalle := auto_inc_detalle_compra.nextval;
UPDATE producto SET producto.stock = producto.stock+:new.cantidad where producto.id_producto=:new.id_producto;
Update compra set compra.monto_total = compra.monto_total+:new.precio where compra.id_compra=:new.id_compra;
END; @@
DELIMITER ; 

ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии

DELIMITER @@
CREATE OR REPLACE TRIGGER SYSTEM.trigger_ventas
BEFORE INSERT ON detalle_venta
FOR EACH ROW
DECLARE
    rut_usuario varchar2(20);
    stock integer;
    money integer;
BEGIN
:new.id_detalle := auto_inc_detalle_venta.nextval;
SELECT venta.id_usuario INTO rut_usuario FROM venta WHERE venta.id_venta=:new.id_venta;
SELECT producto.stock INTO stock FROM producto WHERE producto.id_producto=:new.id_producto;
SELECT producto.precio INTO money FROM producto WHERE producto.id_producto=:new.id_producto;
if (stock > :new.cantidad) then
UPDATE producto SET producto.stock = producto.stock-:new.cantidad where producto.id_producto=:new.id_producto;
Update usuario set usuario.comision = usuario.comision+0.1*money*(:new.cantidad) where usuario.rut=rut_usuario;
Update venta set venta.monto_total = venta.monto_total+money*(:new.cantidad) where venta.id_venta=:new.id_venta;
else
RAISE_APPLICATION_ERROR(-20000,'No se puede vender, falta stock de producto: ' || :new.id_producto); 
end if;
END; @@
DELIMITER ; 

